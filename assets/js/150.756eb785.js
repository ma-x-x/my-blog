(window.webpackJsonp=window.webpackJsonp||[]).push([[150],{681:function(e,_,t){"use strict";t.r(_);var v=t(2),r=Object(v.a)({},(function(){var e=this,_=e.$createElement,t=e._self._c||_;return t("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[t("h2",{attrs:{id:"诞生"}},[e._v("诞生")]),e._v(" "),t("p",[e._v("默认情况下，浏览器是同步加载 JavaScript 脚本，即引擎遇到脚本就会停下来，若是外部脚本还需要等待下载完成，再执行，最后继续向下渲染页面。所以在早期都默认将脚本放在 "),t("code",[e._v("body")]),e._v(" 的最下方。")]),e._v(" "),t("p",[e._v("在等待脚本下载及执行的过程，导致浏览器阻塞无响应，会带来不好的体验，所以就产生了异步加载脚本的方式。")]),e._v(" "),t("h2",{attrs:{id:"区别"}},[e._v("区别")]),e._v(" "),t("h3",{attrs:{id:"_1-defer"}},[e._v("1. defer")]),e._v(" "),t("p",[t("code",[e._v("defer")]),e._v(" 会等到文档完成解析后，才会执行。")]),e._v(" "),t("p",[t("code",[e._v("defer")]),e._v(" 执行顺序固定，根据页面中顺序执行。")]),e._v(" "),t("blockquote",[t("p",[t("code",[e._v("defer")]),e._v(" "),t("strong",[e._v("属性对模块脚本没有作用 —— 他们默认 defer。")])])]),e._v(" "),t("h3",{attrs:{id:"_2-async"}},[e._v("2. async")]),e._v(" "),t("p",[t("code",[e._v("async")]),e._v(" 一旦下载完成，渲染引擎就会中断渲染，执行这个脚本之后再继续渲染。")]),e._v(" "),t("p",[t("code",[e._v("async")]),e._v(" 执行顺序不固定，看谁先下载完了。")])])}),[],!1,null,null,null);_.default=r.exports}}]);