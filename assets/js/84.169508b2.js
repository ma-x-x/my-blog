(window.webpackJsonp=window.webpackJsonp||[]).push([[84],{617:function(t,a,s){"use strict";s.r(a);var n=s(2),e=Object(n.a)({},(function(){var t=this,a=t.$createElement,s=t._self._c||a;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("h1",{attrs:{id:"map-的基本概念"}},[t._v("Map 的基本概念")]),t._v(" "),s("p",[t._v("Map 保存一个键值对, 任何值或键都作为一个键或者值。和 Set 中元素的 [value,value] 形式不同，Map 中元素的形式是 [key,value]")]),t._v(" "),s("div",{staticClass:"custom-block tip"},[s("p",{staticClass:"title"}),s("p",[t._v("注：要是用引用类型的数据作为键名，则要注意获取该键值对时，需要传递同地址的引用类型的数据，而非简单的同值数据。")])]),s("h1",{attrs:{id:"map-的属性"}},[t._v("Map 的属性")]),t._v(" "),s("ul",[s("li",[t._v("map.size: map中的元素的数量")])]),t._v(" "),s("h1",{attrs:{id:"map-的方法"}},[t._v("Map 的方法")]),t._v(" "),s("h2",{attrs:{id:"创建和增加"}},[t._v("创建和增加")]),t._v(" "),s("ul",[s("li",[t._v("构造函数传入数组创建")])]),t._v(" "),s("div",{staticClass:"language-js line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" getmap "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Map")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'aa'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'bb'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" \n getmap"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("set")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'aa'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" \n console"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("getmap"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("get")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'aa'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//2 ")]),t._v("\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br"),s("span",{staticClass:"line-number"},[t._v("3")]),s("br")])]),s("ul",[s("li",[t._v("使用 Set 对象创建 Map 对象")]),t._v(" "),s("li",[t._v("map.set(key, value) 新增一条键值对记录，然后返回该map对象")])]),t._v(" "),s("h2",{attrs:{id:"删除"}},[t._v("删除")]),t._v(" "),s("ul",[s("li",[t._v("map.delete(key) 如果存在该 key 删除后则返回 true，要是没有该元素则返回 false")]),t._v(" "),s("li",[t._v("map.clear() 移除Map对象的所有键/值对")])]),t._v(" "),s("h2",{attrs:{id:"查询和遍历"}},[t._v("查询和遍历")]),t._v(" "),s("ul",[s("li",[t._v("map.has(key) 如果存在该 key 则返回 true，否则则返回 false")]),t._v(" "),s("li",[t._v("map.get(key) 如果存在该 key 则返回 key 对应的 value，否则则返回 undefined")]),t._v(" "),s("li",[t._v("map.entries() 返回一个新的迭代器对象，按照"),s("strong",[t._v("插入顺序")]),t._v("包含的元素形式是[key, value] 的数组")]),t._v(" "),s("li",[t._v("map.keys() 返回一个新的可迭代的对象，包含了按照"),s("strong",[t._v("插入顺序")]),t._v(" 的 map 的 各个键")]),t._v(" "),s("li",[t._v("map.values() 返回一个新的可迭代的对象，包含了按照"),s("strong",[t._v("插入顺序")]),t._v("的 map 的 各个值")]),t._v(" "),s("li",[t._v("map.forEach((value,key,map)=>{}) 其中 value 是当前元素的值，key 是当前元素的键名，map 是当前正在遍历的 map 对象")])])])}),[],!1,null,null,null);a.default=e.exports}}]);